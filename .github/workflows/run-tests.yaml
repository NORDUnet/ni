# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push, pull_request]

jobs:

  unittests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    env:
      PIP_INDEX_URL: https://pypi.sunet.se/simple/
      NEO4J_VERSION: 3.5
      DJANGO_SETTINGS_MODULE: niweb.settings.dev
      NEO4J_RESOURCE_URI: bolt://localhost:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: test
      TEST_NEO4J_URI: bolt://localhost:7680
      TEST_NEO4J_USERNAME: neo4j
      TEST_NEO4J_PASSWORD: test
      TEST_NEO4J_PASSWORD: test
      REPORTS_TO: test@example.com
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      neo4j_db:
        image: neo4j:${NEO4J_VERSION}
        env:
          NEO4J_AUTH: neo4j/test
        ports:
          - 7474:7474
          - 7687:7687
      neo4j_test:
        image: neo4j:${NEO4J_VERSION}
        env:
          NEO4J_AUTH: neo4j/test
        ports:
          - 7470:7474
          - 7680:7687

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          sudo apt install postgresql-client  # psql needed for postgresql setup

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements/dev.txt

      - name: Setup postgresql
        run: |
          psql -c "CREATE DATABASE norduni;" -U postgres
          psql -c "CREATE USER ni PASSWORD 'docker';" -U postgres
          psql -c "ALTER USER ni CREATEDB;" -U postgres
          psql -c "GRANT ALL PRIVILEGES on DATABASE norduni to ni;" -U postgres
          sleep 3 # give xvfb some time to start

      - name: Run tests
        run: |
          python src/niweb/manage.py migrate --settings=niweb.settings.dev
          python src/niweb/manage.py test --settings=niweb.settings.dev apps.noclook.tests

