# Generated by Django 2.2.13 on 2020-07-01 10:15

from django.db import migrations

import norduniclient as nc
import time

try:
    from neo4j.exceptions import CypherError
except ImportError:
    try:
        # pre neo4j 1.4
        from neo4j.v1.exceptions import CypherError
    except ImportError:
        # neo4j 1.1
        from neo4j.v1.api import CypherError

import apps.noclook.vakt.utils as sriutils


def forwards_func(apps, schema_editor):
    NodeType = apps.get_model('noclook', 'NodeType')
    NodeHandle = apps.get_model('noclook', 'NodeHandle')

    node_prop1 = 'first_name'
    node_prop2 = 'last_name'

    # iterate all contacts
    contact_type, created = NodeType.objects.get_or_create(
        type='Contact', slug='contact')

    # wait for neo4j to be available
    neo4j_inited = False
    while not neo4j_inited:
        if nc.graphdb.manager:
            neo4j_inited = True
        else:
            time.sleep(2)

    for nh in NodeHandle.objects.filter(node_type=contact_type):
        # get their node
        contact_node = nc.get_node_model(nc.graphdb.manager, nh.handle_id)

        # get first and last name
        first_name = contact_node.data.get(node_prop1, None)
        last_name = contact_node.data.get(node_prop2, None)

        # check if first_name value is set
        first_name_value = first_name

        if not first_name:
            # if not get node name and set it for the first name
            first_name_value = nh.node_name

            if last_name:
                # if last name is filled, set first_name to this value
                first_name_value = last_name
                contact_node.remove_property(node_prop2)

        contact_node.add_property(node_prop1, first_name_value)


def backwards_func(apps, schema_editor):
    '''
    This migration is not reversible
    '''
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('noclook', '0024_hostsgroups_20200626_0908'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
